"""
Django settings for online_enrollment_system project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path 
import os 
from django.urls import reverse_lazy 
from decouple import config 

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["127.0.0.1", "localhost"]  

# Expiry: 24 hours (synchronize with the templateâ€™s text)
PASSWORD_RESET_TIMEOUT = 60 * 60 * 24

AUTH_USER_MODEL = "admissionapp.CustomUser"




# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MY_APPS = [
    'admissionapp',
    "django.contrib.humanize",   
    # allauth core
    "django.contrib.sites",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    
    # Google provider (REQUIRED to avoid "unknown provider: google")
    "allauth.socialaccount.providers.google",
]

# --- django-allauth essentials ---
SITE_ID = 1 



INSTALLED_APPS.extend(MY_APPS)

SOCIALACCOUNT_PROVIDERS = {
    "google": {
        "APP": {
            "client_id": config("CLIENT_ID"),
            "secret": config("SECRET"),
            "key": "",  # keep empty for Google
        },
        "SCOPE": ["profile", "email"],
        "AUTH_PARAMS": {"access_type": "online"},
        "OAUTH_PKCE_ENABLED": True,
    }
}

# allauth: jump straight to Google without the "Continue" page
SOCIALACCOUNT_LOGIN_ON_GET = True

# Login and Logout Redirect
# --- redirects (using URL names is OK with reverse_lazy) ---
LOGIN_URL = reverse_lazy("login_page")
LOGIN_REDIRECT_URL = reverse_lazy("custom_redirect_url")
LOGOUT_REDIRECT_URL = reverse_lazy("login_page") 

# Khalti base URL configuration
if DEBUG:
    KHALTI_BASE = "https://dev.khalti.com/api/v2"
else:
    KHALTI_BASE = "https://khalti.com/api/v2"

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "allauth.account.middleware.AccountMiddleware",  # Required for allauth
]

ROOT_URLCONF = "online_enrollment_system.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                # your custom CPs
                "admissionapp.context_processors.profile_flags",
            ],
        },
    },
]

WSGI_APPLICATION = "online_enrollment_system.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = ["static"]

# Media Setting
    
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField" 


# Authentication backends
AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
] 

# Email Setup

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = config("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = config("EMAIL_HOST_PASSWORD")
DEFAULT_FROM_EMAIL = config("EMAIL_HOST_USER") 

# Khalti API Integration setup

# Use your actual keys from Khalti dashboard
KHALTI_PUBLIC_KEY = config("KHALTI_PUBLIC_KEY")
KHALTI_SECRET_KEY = config("KHALTI_SECRET_KEY")

# KPG-2 base and endpoints (current docs use /epayment)
KHALTI_INITIATE_URL = f"{KHALTI_BASE}/epayment/initiate/"
KHALTI_LOOKUP_URL = f"{KHALTI_BASE}/epayment/lookup/"


# E-Sewa Settings 
# eSewa Configuration - RC Environment (Test)
# ESEWA_FORM_URL   = "https://rc-epay.esewa.com.np/api/epay/main/v2/form"
# ESEWA_STATUS_URL = "https://rc.esewa.com.np/api/epay/transaction/status/"
# ESEWA_PRODUCT_CODE = "EPAYTEST"  
# ESEWA_SECRET_KEY = "8gBm/:&EnhH.1/q("  

# ESEWA_PRODUCT_CODE = config("ESEWA_PRODUCT_CODE").strip()     
# ESEWA_SECRET_KEY   = config("ESEWA_SECRET_KEY").strip()
# ESEWA_FORM_URL     = config("ESEWA_FORM_URL").strip()      
# ESEWA_STATUS_URL   = config("ESEWA_STATUS_URL").strip() 


# For TEST environment
ESEWA_FORM_URL = "https://rc-epay.esewa.com.np/api/epay/main/v2/form"
ESEWA_STATUS_URL = "https://rc-epay.esewa.com.np/api/epay/transaction/status/"
ESEWA_SECRET_KEY = "8gBm/:&EnhH.1/q"
ESEWA_PRODUCT_CODE = "EPAYTEST"



